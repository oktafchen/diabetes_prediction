# -*- coding: utf-8 -*-
"""Predicted Testing Diabetes Data.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1SU9T5YdKs1zrftyxwpMNZ2Oi0orbcHzj

#load data
"""

# from google.colab import drive
# drive.mount('/content/drive')
import streamlit as st
import numpy as np
import joblib
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
import plotly.graph_objects as go

# Ganti path sesuai lokasi file kamu di Drive
model = joblib.load("xgb_diabetes_model.pkl")
scaler = joblib.load("scaler.pkl")

st.sidebar.title("👩‍💻 Profil")
st.sidebar.markdown("""
**Nama:** Oktavindy  
**Bio:** Aspiring Data Scientist | Data Enthusiast with Background in Logistics, Insurance & Mandarin Communication | Currently in Data Science Bootcamp at Dibimbing.id  
**Kontak:** [📧 Email](mailto:ooktavindy@gmail.com)

**GitHub:** [Klik di sini](https://github.com/oktafchen/diabetes_prediction)
""")


st.set_page_config(page_title="Prediksi Diabetes", page_icon="🩺")
st.title("🩺 Prediksi Diabetes")
st.write("Masukkan data kesehatan Anda sesuai petunjuk di bawah ini 👇")

# Input sliders
pregnancies = st.slider("🤰 Jumlah Kehamilan", 0, 15, 0, help="Jumlah kehamilan yang pernah dialami")
glucose = st.slider("🍬 Glukosa (mg/dL)", 50, 200, 100, help="Normal: 70–140 mg/dL")
blood_pressure = st.slider("🫀 Tekanan Darah (mmHg)", 40, 140, 80, help="Normal: 80–120 mmHg")
skin_thickness = st.slider("📏 Ketebalan Lipatan Kulit (mm)", 0, 100, 20, help="Biasanya 10–50 mm")
insulin = st.slider("💉 Insulin (mu U/ml)", 0, 900, 80, help="Normal: 16–166 mu U/ml")
bmi = st.slider("⚖️ BMI", 10.0, 60.0, 25.0, 0.1, help="Normal: 18.5–24.9")
dpf = st.slider("📊 Diabetes Pedigree Function", 0.0, 2.5, 0.5, 0.01, help="Semakin tinggi, semakin besar kemungkinan memiliki riwayat keluarga diabetes")
age = st.slider("🎂 Usia", 10, 100, 30, help="Usia pasien (tahun)")

# Prediksi
if st.button("🔍 Prediksi"):
    # Masukkan data ke array
    input_data = np.array([[pregnancies, glucose, blood_pressure, skin_thickness, insulin, bmi, dpf, age]])
    
    # Scaling
    input_scaled = scaler.transform(input_data)
    
    # Prediksi
    prediction = model.predict(input_scaled)
    prob = model.predict_proba(input_scaled)[0][1]  # Probabilitas diabetes
    
    # Speedometer Chart
    fig = go.Figure(go.Indicator(
        mode = "gauge+number",
        value = prob * 100,
        title = {'text': "Probabilitas Diabetes (%)"},
        gauge = {
            'axis': {'range': [0, 100]},
            'bar': {'color': "darkblue"},
            'steps': [
                {'range': [0, 40], 'color': "lightgreen"},
                {'range': [40, 70], 'color': "yellow"},
                {'range': [70, 100], 'color': "red"}
            ],
        }
    ))
    
    st.plotly_chart(fig)
    
    # Teks hasil
    if prediction[0] == 1:
        st.error(f"⚠️ Hasil: Kemungkinan **TERDIAGNOSA** diabetes ({prob*100:.2f}%)")
    else:
        st.success(f"✅ Hasil: Kemungkinan **TIDAK TERDIAGNOSA** diabetes ({(1-prob)*100:.2f}%)")

# Visualisasi Dataset Contoh
st.header("📊 Visualisasi Data")
try:
    df = pd.read_csv("diabetes.csv") 
    st.write("Visualisasi ini membantu memahami hubungan antar variabel dan bagaimana kadar glukosa berbeda pada pasien dengan dan tanpa diabetes.")
    # 1️⃣ Heatmap Korelasi Antar Variabel
    st.subheader("🔍 Korelasi Antar Variabel")
    corr = df.corr()
    fig, ax = plt.subplots(figsize=(8,6))
    sns.heatmap(corr, annot=True, cmap='coolwarm', ax=ax)
    st.pyplot(fig)

    st.caption("Heatmap ini menunjukkan hubungan antar variabel pada dataset. "
           "Kadar glukosa, BMI, dan usia terlihat memiliki korelasi yang cukup tinggi dengan status diabetes.")

    # 2️⃣ Boxplot Kadar Glukosa Berdasarkan Status Diabetes
    st.subheader("💉 Perbandingan Kadar Glukosa")
    fig, ax = plt.subplots()
    sns.boxplot(x='Outcome', y='Glucose', data=df, palette='Set2', ax=ax)
    ax.set_xticklabels(['Tidak Diabetes', 'Diabetes'])
    ax.set_xlabel('Status Diabetes')
    ax.set_ylabel('Kadar Glukosa')
    st.pyplot(fig)

    st.caption("Boxplot ini memperlihatkan bahwa pasien dengan diabetes (Outcome = 1) "
            "cenderung memiliki kadar glukosa yang jauh lebih tinggi dibandingkan pasien tanpa diabetes.")
    # st.subheader("Distribusi Kadar Glukosa")
    # fig, ax = plt.subplots()
    # sns.histplot(df['Glucose'], bins=30, kde=True, color='purple', ax=ax)
    # ax.set_title('Distribusi Kadar Glukosa')
    # ax.set_xlabel('Kadar Glukosa')
    # ax.set_ylabel('Jumlah Pasien')
    # st.pyplot(fig)

    # st.caption("Grafik ini menunjukkan distribusi kadar glukosa pada dataset pasien. \
    # Sebagian besar pasien memiliki kadar glukosa antara 90–130, sedangkan kadar di atas 150 \
    # umumnya berkaitan dengan risiko diabetes yang lebih tinggi.")
     # pastikan file ada di repo
    # col1, col2 = st.columns(2)

    # with col1:
    #     st.subheader("Distribusi Usia")
    #     fig_age, ax1 = plt.subplots()
    #     sns.histplot(df["Age"], bins=20, kde=True, ax=ax1, color="skyblue")
    #     st.pyplot(fig_age)

    # with col2:
    #     st.subheader("Distribusi BMI")
    #     fig_bmi, ax2 = plt.subplots()
    #     sns.histplot(df["BMI"], bins=20, kde=True, ax=ax2, color="salmon")
    #     st.pyplot(fig_bmi)

except FileNotFoundError:
    st.warning("File `diabetes.csv` tidak ditemukan. Visualisasi tidak dapat ditampilkan.")
